

events{
    worker_connections  1024;
}



http{
    # rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=3r/s;
    # limit no. of ip connections
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;
    # listen for HTTP requests on port 80 and redirect to HTTPS
    server {
    listen 80;
    listen [::]:80 ;
    server_name localhost;
    return 301 https://$host$request_uri;
    }
    
    server{

        listen 443 ssl;
        http2  on;
        server_name localhost;
        server_tokens off;
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header Cache-Control 'no-store, no-cache';


        # SSL configuration
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers on;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_certificate /etc/nginx/certs/cert.pem;
        ssl_certificate_key /etc/nginx/certs/key.pem;
        # Redirect on rate limit
        error_page 429 = /rate_limit.html;
        location / {
            limit_req zone=api_limit burst=3 nodelay;
            limit_req_status 429;
            limit_conn conn_limit 10;
            proxy_pass http://app:5000;

        } 

        #serve custom rate limit page
        location = /rate_limit.html {
            limit_req zone=api_limit burst=3 nodelay;
            limit_req_status 429;
            limit_conn conn_limit 10;
            return 302 http://localhost/rate_limit;
        }
    }

    
}



